/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.verdis.gui;

/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/

import Sirius.navigator.connection.SessionManager;

import Sirius.server.middleware.types.MetaObject;

import com.vividsolutions.jts.geom.Geometry;
import com.vividsolutions.jts.geom.GeometryFactory;
import com.vividsolutions.jts.io.WKTReader;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;

import java.util.Collection;

import javax.swing.SwingWorker;

import de.cismet.cismap.commons.CrsTransformer;

import de.cismet.tools.gui.StaticSwingTools;

import de.cismet.verdis.server.search.BuchungsblattLanparcelsGeomServerSearch;
import de.cismet.verdis.server.search.KassenzeichenGeomSearch;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class KassenzeichenGrundbuchblattSearchDialog extends javax.swing.JDialog {

    //~ Static fields/initializers ---------------------------------------------

    private static final Logger LOG = Logger.getLogger(KassenzeichenGrundbuchblattSearchDialog.class);

    private static KassenzeichenGrundbuchblattSearchDialog INSTANCE;

    //~ Instance fields --------------------------------------------------------

    private MetaObject grundbuchblatt = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdLagisCrossover1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private de.cismet.verdis.gui.KassenzeichenListPanel kassenzeichenGeomSearchPanel1;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form KassenzeichenGeomSearchDialog.
     *
     * @param  parent  DOCUMENT ME!
     * @param  modal   DOCUMENT ME!
     */
    private KassenzeichenGrundbuchblattSearchDialog(final java.awt.Frame parent, final boolean modal) {
        super(parent, modal);
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public static KassenzeichenGrundbuchblattSearchDialog getInstance() {
        if (INSTANCE == null) {
            INSTANCE = new KassenzeichenGrundbuchblattSearchDialog(Main.getCurrentInstance(), false);
        }
        return INSTANCE;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        kassenzeichenGeomSearchPanel1 = KassenzeichenListPanel.getInstance();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cmdLagisCrossover1 = new javax.swing.JButton();
        jProgressBar1 = KassenzeichenListPanel.getInstance().getProgressBar();

        setTitle("Suche über Grundbuchblatt");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(kassenzeichenGeomSearchPanel1, gridBagConstraints);

        jLabel1.setText("Grundbuchblatt:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("______-______?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel1.add(jLabel2, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/de/cismet/verdis/res/images/toolbar/alks.png"))); // NOI18N
        jButton1.setToolTipText("Alkis-Renderer öffnen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jButton1, gridBagConstraints);

        cmdLagisCrossover1.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/de/cismet/verdis/res/images/toolbar/BPlan.png"))); // NOI18N
        cmdLagisCrossover1.setToolTipText(org.openide.util.NbBundle.getMessage(
                KassenzeichenGrundbuchblattSearchDialog.class,
                "KassenzeichenGrundbuchblattSearchDialog.cmdLagisCrossover1.toolTipText")); // NOI18N
        cmdLagisCrossover1.setFocusPainted(false);
        cmdLagisCrossover1.setFocusable(false);
        cmdLagisCrossover1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdLagisCrossover1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdLagisCrossover1.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    cmdLagisCrossover1ActionPerformed(evt);
                }
            });
        jPanel1.add(cmdLagisCrossover1, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(jProgressBar1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jButton1ActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_jButton1ActionPerformed
        Main.getCurrentInstance().showRenderer(grundbuchblatt);
    }                                                                            //GEN-LAST:event_jButton1ActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void cmdLagisCrossover1ActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_cmdLagisCrossover1ActionPerformed
        setVisible(false);
        StaticSwingTools.showDialog(GrundbuchblattSucheDialog.getInstance());
    }                                                                                      //GEN-LAST:event_cmdLagisCrossover1ActionPerformed

    @Override
    public void setEnabled(final boolean b) {
        super.setEnabled(b);
        kassenzeichenGeomSearchPanel1.setEnabled(b);
    }

    /**
     * DOCUMENT ME!
     *
     * @param  grundbuchblatt  DOCUMENT ME!
     */
    public void setGrundbuchblatt(final MetaObject grundbuchblatt) {
        this.grundbuchblatt = grundbuchblatt;
        final String bbcode = (String)grundbuchblatt.getBean().getProperty("buchungsblattcode");
        jLabel2.setText(bbcode);
        kassenzeichenGeomSearchPanel1.searchStarted();
        new SwingWorker<Collection<Integer>, Void>() {

                @Override
                protected Collection<Integer> doInBackground() throws Exception {
                    final Collection<String> bbUnionGeomSearchResult = (Collection<String>)SessionManager
                                .getProxy()
                                .customServerSearch(SessionManager.getSession().getUser(),
                                        new BuchungsblattLanparcelsGeomServerSearch(
                                            StringUtils.rightPad(bbcode, 14, ' ')));
                    if (bbUnionGeomSearchResult.isEmpty()) {
                        return null;
                    }

                    final Geometry bbUnionGeom = new WKTReader().read((String)bbUnionGeomSearchResult.toArray()[0]);
                    bbUnionGeom.setSRID((Integer)bbUnionGeomSearchResult.toArray()[1]);
                    final String currentCrs = CrsTransformer.createCrsFromSrid(CrsTransformer.getCurrentSrid());
                    final Geometry transformedGeom = CrsTransformer.transformToGivenCrs(bbUnionGeom, currentCrs);
                    transformedGeom.setSRID(CrsTransformer.getCurrentSrid());

                    final KassenzeichenGeomSearch geomSearch = new KassenzeichenGeomSearch();
                    geomSearch.setAllgemeinFilter(true);
                    geomSearch.setGeometry(transformedGeom);

                    final Collection<Integer> result = (Collection<Integer>)SessionManager.getProxy()
                                .customServerSearch(SessionManager.getSession().getUser(), geomSearch);
                    return result;
                }

                @Override
                protected void done() {
                    final Collection<Integer> kassenzeichennummern;
                    try {
                        kassenzeichennummern = get();
                        kassenzeichenGeomSearchPanel1.searchFinished(kassenzeichennummern);
                        if (Main.getCurrentInstance().isRendererVisible()) {
                            Main.getCurrentInstance().showRenderer(grundbuchblatt);
                        }
                    } catch (final Exception ex) {
                        LOG.error(ex, ex);
                        kassenzeichenGeomSearchPanel1.searchFailed(ex.getMessage());
                    }
                }
            }.execute();
    }
}
