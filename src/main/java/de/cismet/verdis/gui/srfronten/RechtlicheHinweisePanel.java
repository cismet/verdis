/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.verdis.gui.srfronten;

import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.dynamics.CidsBeanStore;

import de.cismet.verdis.CidsAppBackend;
import de.cismet.verdis.EditModeListener;

import de.cismet.verdis.commons.constants.VerdisConstants;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class RechtlicheHinweisePanel extends javax.swing.JPanel implements CidsBeanStore, EditModeListener {

    //~ Instance fields --------------------------------------------------------

    private CidsBean cidsBean;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbBaulasten;
    private javax.swing.JCheckBox cbGrunddienstbarkeit;
    private javax.swing.JCheckBox cbKeineGesicherteErschliessung;
    private javax.swing.JCheckBox cbQuadratwurzel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel jPanel1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form RechtlicheHinweisePanel.
     */
    public RechtlicheHinweisePanel() {
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        cbGrunddienstbarkeit = new javax.swing.JCheckBox();
        cbBaulasten = new javax.swing.JCheckBox();
        cbQuadratwurzel = new javax.swing.JCheckBox();
        cbKeineGesicherteErschliessung = new javax.swing.JCheckBox();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 32767));

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridLayout(0, 1));

        org.openide.awt.Mnemonics.setLocalizedText(
            cbGrunddienstbarkeit,
            org.openide.util.NbBundle.getMessage(
                RechtlicheHinweisePanel.class,
                "RechtlicheHinweisePanel.cbGrunddienstbarkeit.text")); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.grunddienstbarkeit}"),
                cbGrunddienstbarkeit,
                org.jdesktop.beansbinding.BeanProperty.create("selected"),
                VerdisConstants.PROP.KASSENZEICHEN.GRUNDDIENSTBARKEIT);
        binding.setSourceNullValue(false);
        binding.setSourceUnreadableValue(false);
        bindingGroup.addBinding(binding);

        jPanel1.add(cbGrunddienstbarkeit);

        org.openide.awt.Mnemonics.setLocalizedText(
            cbBaulasten,
            org.openide.util.NbBundle.getMessage(
                RechtlicheHinweisePanel.class,
                "RechtlicheHinweisePanel.cbBaulasten.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.baulasten}"),
                cbBaulasten,
                org.jdesktop.beansbinding.BeanProperty.create("selected"),
                VerdisConstants.PROP.KASSENZEICHEN.BAULASTEN);
        binding.setSourceNullValue(false);
        binding.setSourceUnreadableValue(false);
        bindingGroup.addBinding(binding);

        jPanel1.add(cbBaulasten);

        org.openide.awt.Mnemonics.setLocalizedText(
            cbQuadratwurzel,
            org.openide.util.NbBundle.getMessage(
                RechtlicheHinweisePanel.class,
                "RechtlicheHinweisePanel.cbQuadratwurzel.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.quadratwurzel}"),
                cbQuadratwurzel,
                org.jdesktop.beansbinding.BeanProperty.create("selected"),
                VerdisConstants.PROP.KASSENZEICHEN.QUADRATWURZEL);
        binding.setSourceNullValue(false);
        binding.setSourceUnreadableValue(false);
        bindingGroup.addBinding(binding);

        jPanel1.add(cbQuadratwurzel);

        org.openide.awt.Mnemonics.setLocalizedText(
            cbKeineGesicherteErschliessung,
            org.openide.util.NbBundle.getMessage(
                RechtlicheHinweisePanel.class,
                "RechtlicheHinweisePanel.cbKeineGesicherteErschliessung.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.keine_gesicherte_erschliessung}"),
                cbKeineGesicherteErschliessung,
                org.jdesktop.beansbinding.BeanProperty.create("selected"),
                VerdisConstants.PROP.KASSENZEICHEN.KEINE_GESICHERTE_ERSCHLIESSUNG);
        binding.setSourceNullValue(false);
        binding.setSourceUnreadableValue(false);
        bindingGroup.addBinding(binding);

        jPanel1.add(cbKeineGesicherteErschliessung);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(filler1, gridBagConstraints);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents

    @Override
    public void setEnabled(final boolean bln) {
        super.setEnabled(bln);
        cbBaulasten.setEnabled(bln);
        cbGrunddienstbarkeit.setEnabled(bln);
        cbQuadratwurzel.setEnabled(bln);
        cbKeineGesicherteErschliessung.setEnabled(bln);
    }

    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        bindingGroup.unbind();
        this.cidsBean = cidsBean;
        bindingGroup.bind();
    }

    /**
     * DOCUMENT ME!
     *
     * @param  editable  DOCUMENT ME!
     */
    private void setEditable(final boolean editable) {
        cbGrunddienstbarkeit.setEnabled(editable);
        cbBaulasten.setEnabled(editable);
        cbQuadratwurzel.setEnabled(editable);
        cbKeineGesicherteErschliessung.setEnabled(editable);
    }

    @Override
    public void editModeChanged() {
        setEditable(CidsAppBackend.getInstance().isEditable());
    }
}
