/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.verdis.gui.aenderungsanfrage;

import org.jdesktop.swingx.JXTable;

import java.util.List;

import javax.swing.JPanel;
import javax.swing.SwingWorker;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.dynamics.CidsBeanStore;

import de.cismet.verdis.CidsAppBackend;
import de.cismet.verdis.EditModeListener;

import de.cismet.verdis.commons.constants.VerdisConstants;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class AenderungsanfrageTablePanel extends JPanel implements CidsBeanStore, EditModeListener {

    //~ Static fields/initializers ---------------------------------------------

    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(
            AenderungsanfrageTablePanel.class);

    //~ Instance fields --------------------------------------------------------

    private CidsBean cidsBean;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXTable aenderungsanfrageTable1;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form RegenflaechenTabellenPanel.
     */
    public AenderungsanfrageTablePanel() {
        initComponents();

        aenderungsanfrageTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

                @Override
                public void valueChanged(final ListSelectionEvent e) {
                }
            });

        refresh();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane2 = new javax.swing.JScrollPane();
        aenderungsanfrageTable1 = new org.jdesktop.swingx.JXTable();
        jButton1 = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 0));

        setLayout(new java.awt.GridBagLayout());

        aenderungsanfrageTable1.setModel(new AenderungsanfrageTableModel());
        aenderungsanfrageTable1.addMouseListener(new java.awt.event.MouseAdapter() {

                @Override
                public void mouseClicked(final java.awt.event.MouseEvent evt) {
                    aenderungsanfrageTable1MouseClicked(evt);
                }
            });
        jScrollPane2.setViewportView(aenderungsanfrageTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane2, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jButton1,
            org.openide.util.NbBundle.getMessage(
                AenderungsanfrageTablePanel.class,
                "AenderungsanfrageTablePanel.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 5, 0);
        add(jButton1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(filler1, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jButton1ActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_jButton1ActionPerformed
        refresh();
    }                                                                            //GEN-LAST:event_jButton1ActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void aenderungsanfrageTable1MouseClicked(final java.awt.event.MouseEvent evt) { //GEN-FIRST:event_aenderungsanfrageTable1MouseClicked
        if (jButton1.isEnabled() && (evt.getClickCount() == 2) && !CidsAppBackend.getInstance().isEditable()) {
            if (aenderungsanfrageTable1.getSelectedRow() >= 0) {
                gotoSelectedKassenzeichen();
            }
        }
    }                                                                                       //GEN-LAST:event_aenderungsanfrageTable1MouseClicked

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public JXTable getTable() {
        return aenderungsanfrageTable1;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public AenderungsanfrageTableModel getModel() {
        return (AenderungsanfrageTableModel)aenderungsanfrageTable1.getModel();
    }

    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    /**
     * DOCUMENT ME!
     */
    private void gotoSelectedKassenzeichen() {
        aenderungsanfrageTable1.getSelectedRow();
        final int rows = aenderungsanfrageTable1.getSelectedRow();
        final CidsBean aenderungsanfrage = getModel().getCidsBeanByIndex(aenderungsanfrageTable1.convertRowIndexToModel(
                    rows));
        if (aenderungsanfrage != null) {
            final Integer kassenzeichen = (Integer)aenderungsanfrage.getProperty(
                    VerdisConstants.PROP.AENDERUNGSANFRAGE.KASSENZEICHEN_NUMMER);
            if (kassenzeichen != null) {
                final Integer stacId = (Integer)aenderungsanfrage.getProperty(
                        VerdisConstants.PROP.AENDERUNGSANFRAGE.STAC_ID);
                CidsAppBackend.getInstance().gotoKassenzeichen(Integer.toString(kassenzeichen) + ";" + stacId);
            }
        }
    }

    /**
     * DOCUMENT ME!
     */
    private void refresh() {
        new SwingWorker<List<CidsBean>, Object>() {

                @Override
                protected List<CidsBean> doInBackground() throws Exception {
                    return AenderungsanfrageHandler.getInstance().searchAenderungsanfrageBeans();
                }

                @Override
                protected void done() {
                    final List<CidsBean> aenderungsanfrageBeans;
                    try {
                        aenderungsanfrageBeans = get();
                        getModel().setCidsBeans(aenderungsanfrageBeans);
                    } catch (final Exception ex) {
                        LOG.error(ex, ex);
                    }
                }
            }.execute();
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        this.cidsBean = cidsBean;
        refresh();
    }

    @Override
    public void editModeChanged() {
//        setEnabled(CidsAppBackend.getInstance().isEditable()
//                    && (AenderungsanfrageHandler.getInstance().getAenderungsanfrageBean() != null));
        refresh();
    }
}
