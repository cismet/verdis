/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.verdis.gui.aenderungsanfrage;

import com.jgoodies.looks.plastic.Plastic3DLookAndFeel;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import de.cismet.verdis.server.json.aenderungsanfrage.AenderungsanfrageJson;
import de.cismet.verdis.server.json.aenderungsanfrage.FlaecheAenderungJson;
import de.cismet.verdis.server.json.aenderungsanfrage.FlaecheFlaechenartJson;
import de.cismet.verdis.server.json.aenderungsanfrage.FlaechePruefungJson;
import de.cismet.verdis.server.json.aenderungsanfrage.NachrichtAnhangJson;
import de.cismet.verdis.server.json.aenderungsanfrage.NachrichtJson;
import de.cismet.verdis.server.json.aenderungsanfrage.PruefungJson;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class AenderungsanfrageNachrichtDialog extends javax.swing.JDialog {

    //~ Instance fields --------------------------------------------------------

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cismet.verdis.gui.aenderungsanfrage.AenderungsanfrageNachrichtenPanel aenderungsanfrageNachrichtenPanel1;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form NewJDialog.
     *
     * @param  parent  DOCUMENT ME!
     * @param  modal   DOCUMENT ME!
     */
    public AenderungsanfrageNachrichtDialog(final java.awt.Frame parent, final boolean modal) {
        super(parent, modal);
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        final java.awt.GridBagConstraints gridBagConstraints;

        aenderungsanfrageNachrichtenPanel1 =
            new de.cismet.verdis.gui.aenderungsanfrage.AenderungsanfrageNachrichtenPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(aenderungsanfrageNachrichtenPanel1, gridBagConstraints);

        pack();
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  args  the command line arguments
     */
    public static void main(final String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            javax.swing.UIManager.setLookAndFeel(new Plastic3DLookAndFeel());
        } catch (final Exception ex) {
            java.util.logging.Logger.getLogger(AenderungsanfrageNachrichtDialog.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    final AenderungsanfrageNachrichtDialog dialog = new AenderungsanfrageNachrichtDialog(
                            new javax.swing.JFrame(),
                            true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                            @Override
                            public void windowClosing(final java.awt.event.WindowEvent e) {
                                System.exit(0);
                            }
                        });

                    final AenderungsanfrageJson anfrageJson = dialog.getComplexAnfrageJson();
                    dialog.aenderungsanfrageNachrichtenPanel1.setNachrichten(anfrageJson.getNachrichten());
                    dialog.setVisible(true);
                }
            });
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    private AenderungsanfrageJson getComplexAnfrageJson() {
        final Map<String, FlaecheAenderungJson> flaechen = new HashMap<>();
        flaechen.put("1", new FlaecheAenderungJson.Groesse(1430));
        flaechen.put(
            "2",
            new FlaecheAenderungJson.Groesse(
                921,
                new FlaechePruefungJson.Groesse(new PruefungJson.Groesse(921, "SteinbacherD102", new Date(47110815)))));
        flaechen.put(
            "8",
            new FlaecheAenderungJson.Flaechenart(
                new FlaecheFlaechenartJson("Gründachfläche", "GDF"),
                new FlaechePruefungJson.Flaechenart(
                    new PruefungJson.Flaechenart(
                        new FlaecheFlaechenartJson("Gründachfläche", "GDF"),
                        "SteinbacherD102",
                        new Date(47110815)))));

        final List<NachrichtJson> nachrichten = new ArrayList<>();
        nachrichten.add(new NachrichtJson(
                NachrichtJson.Typ.CLERK,
                new Date(1562059800000L),
                "Sehr geehrte*r Nutzer*in, hier haben Sie die Möglichkeit Änderungen an Ihren Flächen mitzuteilen.",
                "verdis"));
        nachrichten.add(new NachrichtJson(
                NachrichtJson.Typ.CITIZEN,
                new Date(1562060700000L),
                "Fläche B ist kleiner. Sie ist nicht 40 m² groß, sondern nur 37 m². Sie ist auch nicht an dem Kanal angeschlossen, sondern besteht aus Ökopflaster und versickert. Siehe Foto.",
                "...",
                Arrays.asList(new NachrichtAnhangJson("Ökopflasterfoto.pdf", "1337"))));
        nachrichten.add(new NachrichtJson(
                NachrichtJson.Typ.CLERK,
                new Date(1562136300000L),
                "Die Änderung der Fläche werde ich übernehmen. Das Foto ist nicht ausreichend. Bitte übersenden Sie zusätzlich ein Foto der gesamten Fläche. Ökopflaster wird auch nicht als vollständig versickernd angesehen, sondern muss laut Satzung mit 70% seiner Flächen zur Gebührenerhebung herangezogen werden.",
                "Dirk Steinbacher"));
        nachrichten.add(new NachrichtJson(
                new Date(1562136360000L),
                "SYSTEMMESSAGE({ type: 'changed', flaeche: '1' ,flaechenart:'Dachfläche'})"));
        nachrichten.add(new NachrichtJson(
                NachrichtJson.Typ.CITIZEN,
                new Date(1562179560000L),
                "Hier das gewünschte Foto. Die Zufahrt entwässert seitlich in die Beete.",
                "...",
                Arrays.asList(new NachrichtAnhangJson("Foto2.pdf", "13374"))));
        nachrichten.add(new NachrichtJson(
                NachrichtJson.Typ.CLERK,
                new Date(1562227500000L),
                "Auf dem 2ten Foto sind Rasenkantensteine und ein Gully zu erkennen. Aus diesem Grund muss ich für diese Fläche 24 m² (70% von 37 m²) zur Veranlagung an das Steueramt weitergeben.",
                "Dirk Steinbacher"));
        nachrichten.add(new NachrichtJson(
                new Date(1562227560000L),
                "SYSTEMMESSAGE({ type: 'changed', flaeche: '1', flaechenart:'Dachfläche' })"));
        nachrichten.add(new NachrichtJson(
                Boolean.TRUE,
                NachrichtJson.Typ.CITIZEN,
                new Date(1562486760000L),
                "So wird eine Nachricht visualisiert, die noch nicht abgesschickt ist.",
                "..."));

        final AenderungsanfrageJson anfrageJson = new AenderungsanfrageJson(
                60004629,
                flaechen,
                nachrichten);
        return anfrageJson;
    }
}
