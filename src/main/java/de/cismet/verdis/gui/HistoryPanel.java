/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 *  Copyright (C) 2010 thorsten
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * HistoryPanel.java
 *
 * Created on 06.12.2010, 10:22:48
 */
package de.cismet.verdis.gui;

import Sirius.server.middleware.types.HistoryObject;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.text.DateFormat;

import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.dynamics.CidsBeanStore;

import de.cismet.verdis.CidsAppBackend;
import de.cismet.verdis.EditModeListener;

import de.cismet.verdis.constants.KassenzeichenPropertyConstants;

/**
 * DOCUMENT ME!
 *
 * @author   thorsten
 * @version  $Revision$, $Date$
 */
public class HistoryPanel extends javax.swing.JPanel implements CidsBeanStore, EditModeListener {

    //~ Static fields/initializers ---------------------------------------------

    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(HistoryPanel.class);
    private static final String JSON_MIMETYPE = "text/javascript";

    //~ Instance fields --------------------------------------------------------

    private CidsBean kassenzeichenBean;
    private HistoryObject left;
    private HistoryObject right;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbLeft;
    private javax.swing.JComboBox cbRight;
    private javax.swing.JPanel jPanel1;
    private de.cismet.custom.visualdiff.DiffPanel pnlDiffPanel;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form HistoryPanel.
     */
    public HistoryPanel() {
        initComponents();

        cbLeft.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(final ActionEvent ae) {
                    if (cbLeft.getModel().getSelectedItem() instanceof HistoryObject) {
                        left = (HistoryObject)cbLeft.getModel().getSelectedItem();
                    } else {
                        left = null;
                    }

                    final int index = cbLeft.getSelectedIndex();
                    if (index == 0) {
                        cbRight.setSelectedIndex(0);
                    } else if ((index + 1) < cbRight.getItemCount()) {
                        cbRight.setSelectedIndex(index + 1);
                    }
                }
            });

        cbRight.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(final ActionEvent ae) {
                    right = null;

                    if (cbRight.getModel().getSelectedItem() instanceof HistoryObject) {
                        right = (HistoryObject)cbRight.getModel().getSelectedItem();
                    }

                    if ((left != null) && (right != null)) {
                        final String leftDate = DateFormat.getDateTimeInstance().format(left.getValidFrom());
                        final String rightDate = DateFormat.getDateTimeInstance().format(right.getValidFrom());

                        pnlDiffPanel.setLeftAndRight(
                            left.getJsonData(),
                            JSON_MIMETYPE,
                            leftDate,
                            right.getJsonData(),
                            JSON_MIMETYPE,
                            rightDate);
                    } else {
                        pnlDiffPanel.showFilesMissing();
                    }

                    repaint();
                }
            });
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        pnlDiffPanel = new de.cismet.custom.visualdiff.DiffPanel();
        jPanel1 = new javax.swing.JPanel();
        cbLeft = new HistoryComboBox();
        cbRight = new HistoryComboBox();

        setLayout(new java.awt.BorderLayout());
        add(pnlDiffPanel, java.awt.BorderLayout.CENTER);

        jPanel1.add(cbLeft);

        jPanel1.add(cbRight);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);
    } // </editor-fold>//GEN-END:initComponents

    @Override
    public CidsBean getCidsBean() {
        return kassenzeichenBean;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        kassenzeichenBean = cidsBean;

        if (cidsBean != null) {
            final int kassenzeichenId = (Integer)kassenzeichenBean.getProperty("id");

            new SwingWorker<HistoryObject[], Void>() {

                    @Override
                    protected HistoryObject[] doInBackground() {
                        try {
                            return CidsAppBackend.getInstance().getHistory(kassenzeichenId, 5);
                        } catch (Exception e) {
                            LOG.error("Error occurred while fetching history of kassenzeichen '" + kassenzeichenId
                                        + "'.",
                                e);
                            return new HistoryObject[] {};
                        }
                    }

                    @Override
                    protected void done() {
                        try {
                            final HistoryObject[] historyObjects = get();
                            if ((historyObjects != null) && (historyObjects.length > 0)) {
                                cbLeft.setModel(new HistoryComboBoxModel(historyObjects));
                                cbRight.setModel(new HistoryComboBoxModel(historyObjects));
                                cbLeft.setEnabled(true);
                                cbRight.setEnabled(true);
                            } else {
                                cbLeft.setEnabled(false);
                                cbRight.setEnabled(false);
                                JOptionPane.showMessageDialog(
                                    HistoryPanel.this,
                                    "Der Verlauf des Kassenzeichens '"
                                            + kassenzeichenId
                                            + "' konnte nicht erstellt werden.",
                                    "Fehler",
                                    JOptionPane.ERROR_MESSAGE);
                            }
                        } catch (Exception e) {
                            LOG.error("Exception in Background Thread", e);
                        }
                    }
                }.execute();
        }
    }

    @Override
    public void editModeChanged() {
    }
}
