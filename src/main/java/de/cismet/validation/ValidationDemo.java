/*
 * ValidationDemo.java
 *
 * Created on 1. Februar 2005, 14:25
 */

package de.cismet.validation;
import javax.swing.text.PlainDocument;
/**
 *
 * @author  hell
 */
public class ValidationDemo extends javax.swing.JFrame {
    /** Creates new form ValidationDemo */
    java.util.Vector v=new java.util.Vector();
    Validator v1;
    Validator v2;
    SimpleValidationModel svm;
    public ValidationDemo() {
        initComponents();
        svm=new SimpleValidationModel();
        txt1.setDocument(svm);
        txt2.setDocument(svm);
        v1=new Validator(txt1,svm );

        
        v2=new Validator(jComboBox1,svm );
      }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt1 = new javax.swing.JTextArea();
        txt2 = new javax.swing.JTextField();
        pan = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(txt1);
        txt1.setBounds(52, 10, 150, 60);

        txt2.setText("jTextField1");
        getContentPane().add(txt2);
        txt2.setBounds(72, 80, 171, 28);
        getContentPane().add(pan);
        pan.setBounds(52, 130, 40, 40);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(110, 160, 97, 29);

        jLabel1.setText("jLabel1");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1);
        jLabel1.setBounds(210, 140, 45, 16);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(90, 110, 91, 27);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       txt1.setDocument(new PlainDocument());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ValidationDemo().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel pan;
    private javax.swing.JTextArea txt1;
    private javax.swing.JTextField txt2;
    // End of variables declaration//GEN-END:variables
    
    
    private class SimpleValidationModel extends de.cismet.verdis.models.SimpleDocumentModel implements Validatable {
        java.util.Vector li=new java.util.Vector();
        String content="";
        public void addValidationStateChangedListener(ValidationStateChangedListener l){
            li.add(l);
        }
        public void removeValidationStateChangedListener(ValidationStateChangedListener l){
            li.remove(l);
        }
        public int getStatus(){
            if (content.length()%2==0) {
                return Validatable.ERROR;
            }
            else{
                return Validatable.VALID;
            }
        }
        public String getValidationMessage(){
            return "Coooooooooooler Shaker";
        }
        public void assignValue(String newValue) {
            content=newValue;
            fireValidationStateChanged();
        }
        
        public  void fireValidationStateChanged() {
            java.util.Iterator it=li.iterator();
            while (it.hasNext()) {
                ValidationStateChangedListener v=(ValidationStateChangedListener)it.next();
                v.validationStateChanged();
            }
        }
        
    }
    
    
}
